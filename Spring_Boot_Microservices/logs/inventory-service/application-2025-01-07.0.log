07-01-2025 20:50:09.016 [main] [-] INFO  inventory-service-c.p.e.i.InventoryServiceApplication.logStarting - Starting InventoryServiceApplication using Java 22.0.2 with PID 3571 (/Users/parimal/Java_Projects/Spring_Boot_Microservices/inventory-service/target/classes started by parimal in /Users/parimal/Java_Projects/Spring_Boot_Microservices)
07-01-2025 20:50:09.019 [main] [-] INFO  inventory-service-c.p.e.i.InventoryServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
07-01-2025 20:50:09.043 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://localhost:9040
07-01-2025 20:50:09.044 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=inventory-service, profiles=[default], label=null, version=7b9636911bb4e7705c999f8569591213aa7f242b, state=
07-01-2025 20:50:09.505 [main] [-] INFO  inventory-service-o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
07-01-2025 20:50:09.563 [main] [-] INFO  inventory-service-o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 55 ms. Found 1 JPA repository interface.
07-01-2025 20:50:09.689 [main] [-] INFO  inventory-service-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=ee674a73-f150-3676-b118-6815a60d9d35
07-01-2025 20:50:09.857 [main] [-] WARN  inventory-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
07-01-2025 20:50:09.859 [main] [-] WARN  inventory-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
07-01-2025 20:50:09.999 [main] [-] INFO  inventory-service-o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port 9010 (http)
07-01-2025 20:50:10.004 [main] [-] INFO  inventory-service-o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-9010"]
07-01-2025 20:50:10.006 [main] [-] INFO  inventory-service-o.a.catalina.core.StandardService.log - Starting service [Tomcat]
07-01-2025 20:50:10.006 [main] [-] INFO  inventory-service-o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.31]
07-01-2025 20:50:10.035 [main] [-] INFO  inventory-service-o.a.c.c.C.[.[localhost].[/products].log - Initializing Spring embedded WebApplicationContext
07-01-2025 20:50:10.035 [main] [-] INFO  inventory-service-o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 990 ms
07-01-2025 20:50:10.378 [main] [-] INFO  inventory-service-o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
07-01-2025 20:50:10.405 [main] [-] INFO  inventory-service-org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.5.3.Final
07-01-2025 20:50:10.417 [main] [-] INFO  inventory-service-o.h.c.i.RegionFactoryInitiator.initiateService - HHH000026: Second-level cache disabled
07-01-2025 20:50:10.544 [main] [-] INFO  inventory-service-o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
07-01-2025 20:50:10.556 [main] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
07-01-2025 20:50:10.598 [main] [-] INFO  inventory-service-com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2784145d
07-01-2025 20:50:10.599 [main] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
07-01-2025 20:50:11.067 [main] [-] INFO  inventory-service-o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
07-01-2025 20:50:11.111 [main] [-] INFO  inventory-service-o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
07-01-2025 20:50:11.695 [main] [-] WARN  inventory-service-o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
07-01-2025 20:50:11.768 [main] [-] INFO  inventory-service-o.s.c.o.FeignClientFactoryBean.getTarget - For 'order-service' URL not provided. Will try picking an instance via load-balancing.
07-01-2025 20:50:12.384 [main] [-] INFO  inventory-service-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
07-01-2025 20:50:12.398 [main] [-] WARN  inventory-service-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
07-01-2025 20:50:12.407 [main] [-] INFO  inventory-service-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 17 endpoints beneath base path '/actuator'
07-01-2025 20:50:12.464 [main] [-] INFO  inventory-service-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
07-01-2025 20:50:12.473 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
07-01-2025 20:50:12.475 [main] [-] INFO  inventory-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
07-01-2025 20:50:12.478 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
07-01-2025 20:50:12.478 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
07-01-2025 20:50:12.478 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
07-01-2025 20:50:12.478 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
07-01-2025 20:50:12.478 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
07-01-2025 20:50:12.478 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
07-01-2025 20:50:12.478 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
07-01-2025 20:50:12.542 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
07-01-2025 20:50:12.543 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
07-01-2025 20:50:12.543 [main] [-] INFO  inventory-service-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
07-01-2025 20:50:12.544 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1736263212543 with initial instances count: 1
07-01-2025 20:50:12.547 [main] [-] INFO  inventory-service-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application INVENTORY-SERVICE with eureka with status UP
07-01-2025 20:50:12.547 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1736263212547, current=UP, previous=STARTING]
07-01-2025 20:50:12.547 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010: registering service...
07-01-2025 20:50:12.548 [main] [-] INFO  inventory-service-o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-9010"]
07-01-2025 20:50:12.555 [main] [-] INFO  inventory-service-o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port 9010 (http) with context path '/products'
07-01-2025 20:50:12.555 [main] [-] INFO  inventory-service-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 9010
07-01-2025 20:50:12.567 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - registration status: 204
07-01-2025 20:50:12.576 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

07-01-2025 20:50:12.614 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 20:50:12.709 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 20:50:12.709 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 20:50:12.709 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736263212708
07-01-2025 20:50:12.715 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Subscribed to topic(s): my-new-topic
07-01-2025 20:50:12.719 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

07-01-2025 20:50:12.719 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 20:50:12.723 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 20:50:12.723 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 20:50:12.723 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736263212723
07-01-2025 20:50:12.725 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Subscribed to topic(s): my-new-topic
07-01-2025 20:50:12.726 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

07-01-2025 20:50:12.727 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 20:50:12.729 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 20:50:12.729 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 20:50:12.730 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736263212729
07-01-2025 20:50:12.731 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Subscribed to topic(s): order-item-added-topic
07-01-2025 20:50:12.732 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

07-01-2025 20:50:12.732 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 20:50:12.735 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 20:50:12.735 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 20:50:12.735 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736263212735
07-01-2025 20:50:12.737 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Subscribed to topic(s): my-new-topic
07-01-2025 20:50:12.755 [main] [-] INFO  inventory-service-c.p.e.i.InventoryServiceApplication.logStarted - Started InventoryServiceApplication in 8.633 seconds (process running for 8.83)
07-01-2025 20:50:12.849 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 20:50:12.849 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 20:50:12.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 20:50:12.850 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 20:50:12.850 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 20:50:12.850 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 20:50:12.850 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 20:50:12.850 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 20:50:12.851 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
07-01-2025 20:50:12.853 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
07-01-2025 20:50:12.854 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] (Re-)joining group
07-01-2025 20:50:12.862 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] (Re-)joining group
07-01-2025 20:50:12.869 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-1-5904f2ff-7873-4835-95b6-db9e6b9a5a52
07-01-2025 20:50:12.869 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-4-6b62682c-fc50-4d4c-8e10-74ec2190253d
07-01-2025 20:50:12.870 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-2-ab3c9830-494a-4508-ad53-7e823760c257
07-01-2025 20:50:12.870 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
07-01-2025 20:50:12.870 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-3-a65657b6-65be-41fc-8711-2092d1e9404e
07-01-2025 20:50:12.870 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
07-01-2025 20:50:12.870 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] (Re-)joining group
07-01-2025 20:50:12.870 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] (Re-)joining group
07-01-2025 20:50:12.873 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=1, memberId='consumer-inventory-service-1-5904f2ff-7873-4835-95b6-db9e6b9a5a52', protocol='range'}
07-01-2025 20:50:12.874 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=1, memberId='consumer-inventory-service-2-ab3c9830-494a-4508-ad53-7e823760c257', protocol='range'}
07-01-2025 20:50:12.873 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Successfully joined group with generation Generation{generationId=1, memberId='consumer-inventory-service-3-a65657b6-65be-41fc-8711-2092d1e9404e', protocol='range'}
07-01-2025 20:50:12.874 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Successfully joined group with generation Generation{generationId=1, memberId='consumer-inventory-service-4-6b62682c-fc50-4d4c-8e10-74ec2190253d', protocol='range'}
07-01-2025 20:50:12.882 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onLeaderElected - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Finished assignment for group at generation 1: {consumer-inventory-service-2-ab3c9830-494a-4508-ad53-7e823760c257=Assignment(partitions=[my-new-topic-1]), consumer-inventory-service-4-6b62682c-fc50-4d4c-8e10-74ec2190253d=Assignment(partitions=[my-new-topic-2]), consumer-inventory-service-1-5904f2ff-7873-4835-95b6-db9e6b9a5a52=Assignment(partitions=[my-new-topic-0]), consumer-inventory-service-3-a65657b6-65be-41fc-8711-2092d1e9404e=Assignment(partitions=[order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2])}
07-01-2025 20:50:12.885 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully synced group in generation Generation{generationId=1, memberId='consumer-inventory-service-1-5904f2ff-7873-4835-95b6-db9e6b9a5a52', protocol='range'}
07-01-2025 20:50:12.885 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Successfully synced group in generation Generation{generationId=1, memberId='consumer-inventory-service-4-6b62682c-fc50-4d4c-8e10-74ec2190253d', protocol='range'}
07-01-2025 20:50:12.886 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Successfully synced group in generation Generation{generationId=1, memberId='consumer-inventory-service-3-a65657b6-65be-41fc-8711-2092d1e9404e', protocol='range'}
07-01-2025 20:50:12.886 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully synced group in generation Generation{generationId=1, memberId='consumer-inventory-service-2-ab3c9830-494a-4508-ad53-7e823760c257', protocol='range'}
07-01-2025 20:50:12.886 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-0])
07-01-2025 20:50:12.886 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2])
07-01-2025 20:50:12.886 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-1])
07-01-2025 20:50:12.886 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-2])
07-01-2025 20:50:12.887 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-0
07-01-2025 20:50:12.887 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Adding newly assigned partitions: order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2
07-01-2025 20:50:12.887 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-2
07-01-2025 20:50:12.887 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-1
07-01-2025 20:50:12.891 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Found no committed offset for partition order-item-added-topic-0
07-01-2025 20:50:12.891 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Found no committed offset for partition my-new-topic-2
07-01-2025 20:50:12.892 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Found no committed offset for partition order-item-added-topic-2
07-01-2025 20:50:12.891 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Found no committed offset for partition my-new-topic-1
07-01-2025 20:50:12.891 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Found no committed offset for partition my-new-topic-0
07-01-2025 20:50:12.892 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Found no committed offset for partition order-item-added-topic-1
07-01-2025 20:50:12.896 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Found no committed offset for partition my-new-topic-1
07-01-2025 20:50:12.896 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Found no committed offset for partition my-new-topic-2
07-01-2025 20:50:12.896 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Found no committed offset for partition order-item-added-topic-0
07-01-2025 20:50:12.896 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Found no committed offset for partition order-item-added-topic-2
07-01-2025 20:50:12.896 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Found no committed offset for partition order-item-added-topic-1
07-01-2025 20:50:12.896 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Found no committed offset for partition my-new-topic-0
07-01-2025 20:50:12.903 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.SubscriptionState.maybeSeekUnvalidated - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting offset for partition my-new-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
07-01-2025 20:50:12.904 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.SubscriptionState.maybeSeekUnvalidated - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Resetting offset for partition my-new-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
07-01-2025 20:50:12.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.SubscriptionState.maybeSeekUnvalidated - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Resetting offset for partition order-item-added-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
07-01-2025 20:50:12.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.SubscriptionState.maybeSeekUnvalidated - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Resetting offset for partition order-item-added-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
07-01-2025 20:50:12.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.SubscriptionState.maybeSeekUnvalidated - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Resetting offset for partition order-item-added-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
07-01-2025 20:50:12.905 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.SubscriptionState.maybeSeekUnvalidated - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting offset for partition my-new-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
07-01-2025 20:50:12.912 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-1]
07-01-2025 20:50:12.913 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-0]
07-01-2025 20:50:12.914 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]
07-01-2025 20:50:12.912 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-2]
07-01-2025 20:51:01.273 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-c.p.e.i.c.OrdersKafkaConsumer.handleOrderItemAddedTopic - Inside the order item added topic consumer with data: OrderItemAddedEvent(id=5, productId=1, quantity=10)
07-01-2025 20:53:34.722 [SpringApplicationShutdownHook] [-] INFO  inventory-service-o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
07-01-2025 20:53:34.724 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1736263414724, current=DOWN, previous=UP]
07-01-2025 20:53:34.726 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010: registering service...
07-01-2025 20:53:34.736 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-0
07-01-2025 20:53:34.737 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-0]
07-01-2025 20:53:34.737 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Member consumer-inventory-service-1-5904f2ff-7873-4835-95b6-db9e6b9a5a52 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 20:53:34.738 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-1
07-01-2025 20:53:34.738 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-1]
07-01-2025 20:53:34.738 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Member consumer-inventory-service-2-ab3c9830-494a-4508-ad53-7e823760c257 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 20:53:34.739 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.737 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.742 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-2
07-01-2025 20:53:34.742 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-2]
07-01-2025 20:53:34.742 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Member consumer-inventory-service-4-6b62682c-fc50-4d4c-8e10-74ec2190253d sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 20:53:34.742 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.742 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.742 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 20:53:34.739 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.743 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Revoke previously assigned partitions order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2
07-01-2025 20:53:34.742 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 20:53:34.743 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 20:53:34.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]
07-01-2025 20:53:34.745 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Member consumer-inventory-service-3-a65657b6-65be-41fc-8711-2092d1e9404e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 20:53:34.746 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.746 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.746 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 20:53:34.749 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9000/eureka/} exception=I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": localhost:9000 failed to respond stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": localhost:9000 failed to respond
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.core5.http.NoHttpResponseException: localhost:9000 failed to respond
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:306)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:717)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

07-01-2025 20:53:34.749 [DiscoveryClient-InstanceInfoReplicator-%d] [-] WARN  inventory-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": localhost:9000 failed to respond
07-01-2025 20:53:34.752 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.752 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.754 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.755 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.755 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.754 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.755 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.755 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 20:53:34.783 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 20:53:34.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 20:53:34.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 20:53:34.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 20:53:34.788 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-3 unregistered
07-01-2025 20:53:34.794 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9000/eureka/}, exception=I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

07-01-2025 20:53:34.794 [DiscoveryClient-InstanceInfoReplicator-%d] [-] WARN  inventory-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
07-01-2025 20:53:34.794 [DiscoveryClient-InstanceInfoReplicator-%d] [-] WARN  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
07-01-2025 20:53:34.795 [DiscoveryClient-InstanceInfoReplicator-%d] [-] WARN  inventory-service-c.n.discovery.InstanceInfoReplicator.run - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
07-01-2025 20:53:34.844 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 20:53:35.190 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 20:53:35.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 20:53:35.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 20:53:35.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 20:53:35.190 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 20:53:35.191 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 20:53:35.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 20:53:35.191 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 20:53:35.191 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 20:53:35.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 20:53:35.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 20:53:35.191 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 20:53:35.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-2 unregistered
07-01-2025 20:53:35.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 20:53:35.196 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-4 unregistered
07-01-2025 20:53:35.197 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 20:53:35.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-1 unregistered
07-01-2025 20:53:35.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 20:53:35.208 [SpringApplicationShutdownHook] [-] INFO  inventory-service-o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
07-01-2025 20:53:35.210 [SpringApplicationShutdownHook] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
07-01-2025 20:53:35.211 [SpringApplicationShutdownHook] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
07-01-2025 20:53:35.333 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
07-01-2025 20:53:38.338 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.unregister - Unregistering ...
07-01-2025 20:53:38.344 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9000/eureka/}, exception=I/O error on DELETE request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE/192.168.246.29:inventory-service:9010": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE/192.168.246.29:inventory-service:9010": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

07-01-2025 20:53:38.344 [SpringApplicationShutdownHook] [-] WARN  inventory-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on DELETE request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE/192.168.246.29:inventory-service:9010": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
07-01-2025 20:53:38.344 [SpringApplicationShutdownHook] [-] ERROR inventory-service-c.netflix.discovery.DiscoveryClient.unregister - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
07-01-2025 20:53:38.344 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.shutdown - Completed shut down of DiscoveryClient
07-01-2025 21:13:34.631 [main] [-] INFO  inventory-service-c.p.e.i.InventoryServiceApplication.logStarting - Starting InventoryServiceApplication using Java 22.0.2 with PID 4258 (/Users/parimal/Java_Projects/Spring_Boot_Microservices/inventory-service/target/classes started by parimal in /Users/parimal/Java_Projects/Spring_Boot_Microservices)
07-01-2025 21:13:34.632 [main] [-] INFO  inventory-service-c.p.e.i.InventoryServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
07-01-2025 21:13:34.651 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://localhost:9040
07-01-2025 21:13:34.653 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=inventory-service, profiles=[default], label=null, version=7b9636911bb4e7705c999f8569591213aa7f242b, state=
07-01-2025 21:13:35.117 [main] [-] INFO  inventory-service-o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
07-01-2025 21:13:35.175 [main] [-] INFO  inventory-service-o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 55 ms. Found 1 JPA repository interface.
07-01-2025 21:13:35.308 [main] [-] INFO  inventory-service-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=ee674a73-f150-3676-b118-6815a60d9d35
07-01-2025 21:13:35.478 [main] [-] WARN  inventory-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
07-01-2025 21:13:35.481 [main] [-] WARN  inventory-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
07-01-2025 21:13:35.635 [main] [-] INFO  inventory-service-o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port 9010 (http)
07-01-2025 21:13:35.640 [main] [-] INFO  inventory-service-o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-9010"]
07-01-2025 21:13:35.642 [main] [-] INFO  inventory-service-o.a.catalina.core.StandardService.log - Starting service [Tomcat]
07-01-2025 21:13:35.642 [main] [-] INFO  inventory-service-o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.31]
07-01-2025 21:13:35.670 [main] [-] INFO  inventory-service-o.a.c.c.C.[.[localhost].[/products].log - Initializing Spring embedded WebApplicationContext
07-01-2025 21:13:35.670 [main] [-] INFO  inventory-service-o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1015 ms
07-01-2025 21:13:36.022 [main] [-] INFO  inventory-service-o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
07-01-2025 21:13:36.049 [main] [-] INFO  inventory-service-org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.5.3.Final
07-01-2025 21:13:36.061 [main] [-] INFO  inventory-service-o.h.c.i.RegionFactoryInitiator.initiateService - HHH000026: Second-level cache disabled
07-01-2025 21:13:36.182 [main] [-] INFO  inventory-service-o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
07-01-2025 21:13:36.193 [main] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
07-01-2025 21:13:36.233 [main] [-] INFO  inventory-service-com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5776a9f8
07-01-2025 21:13:36.235 [main] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
07-01-2025 21:13:36.624 [main] [-] INFO  inventory-service-o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
07-01-2025 21:13:36.713 [main] [-] INFO  inventory-service-o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
07-01-2025 21:13:36.942 [main] [-] WARN  inventory-service-o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
07-01-2025 21:13:36.983 [main] [-] INFO  inventory-service-o.s.c.o.FeignClientFactoryBean.getTarget - For 'order-service' URL not provided. Will try picking an instance via load-balancing.
07-01-2025 21:13:37.608 [main] [-] INFO  inventory-service-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
07-01-2025 21:13:37.634 [main] [-] WARN  inventory-service-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
07-01-2025 21:13:37.649 [main] [-] INFO  inventory-service-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 17 endpoints beneath base path '/actuator'
07-01-2025 21:13:37.717 [main] [-] INFO  inventory-service-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
07-01-2025 21:13:37.733 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
07-01-2025 21:13:37.734 [main] [-] INFO  inventory-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
07-01-2025 21:13:37.739 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
07-01-2025 21:13:37.739 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
07-01-2025 21:13:37.739 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
07-01-2025 21:13:37.739 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
07-01-2025 21:13:37.739 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
07-01-2025 21:13:37.739 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
07-01-2025 21:13:37.739 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
07-01-2025 21:13:37.828 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
07-01-2025 21:13:37.829 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
07-01-2025 21:13:37.830 [main] [-] INFO  inventory-service-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
07-01-2025 21:13:37.831 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1736264617831 with initial instances count: 1
07-01-2025 21:13:37.834 [main] [-] INFO  inventory-service-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application INVENTORY-SERVICE with eureka with status UP
07-01-2025 21:13:37.834 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1736264617834, current=UP, previous=STARTING]
07-01-2025 21:13:37.835 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010: registering service...
07-01-2025 21:13:37.836 [main] [-] INFO  inventory-service-o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-9010"]
07-01-2025 21:13:37.879 [main] [-] INFO  inventory-service-o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port 9010 (http) with context path '/products'
07-01-2025 21:13:37.880 [main] [-] INFO  inventory-service-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 9010
07-01-2025 21:13:37.890 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - registration status: 204
07-01-2025 21:13:37.911 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

07-01-2025 21:13:37.944 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 21:13:38.041 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 21:13:38.041 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 21:13:38.041 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736264618040
07-01-2025 21:13:38.052 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Subscribed to topic(s): my-new-topic
07-01-2025 21:13:38.058 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

07-01-2025 21:13:38.059 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 21:13:38.066 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 21:13:38.068 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 21:13:38.069 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736264618066
07-01-2025 21:13:38.071 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Subscribed to topic(s): my-new-topic
07-01-2025 21:13:38.073 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

07-01-2025 21:13:38.073 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 21:13:38.081 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 21:13:38.081 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 21:13:38.081 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736264618081
07-01-2025 21:13:38.087 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Subscribed to topic(s): order-item-added-topic
07-01-2025 21:13:38.089 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

07-01-2025 21:13:38.091 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 21:13:38.094 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 21:13:38.094 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 21:13:38.094 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736264618094
07-01-2025 21:13:38.096 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Subscribed to topic(s): my-new-topic
07-01-2025 21:13:38.123 [main] [-] INFO  inventory-service-c.p.e.i.InventoryServiceApplication.logStarted - Started InventoryServiceApplication in 7.551 seconds (process running for 7.743)
07-01-2025 21:13:38.234 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 21:13:38.234 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 21:13:38.234 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 21:13:38.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 21:13:38.235 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 21:13:38.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 21:13:38.235 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 21:13:38.235 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 21:13:38.236 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:38.236 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:38.236 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:38.236 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:38.250 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e
07-01-2025 21:13:38.250 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297
07-01-2025 21:13:38.250 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c
07-01-2025 21:13:38.250 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501
07-01-2025 21:13:38.250 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:38.250 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:38.251 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:38.250 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:38.253 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Successfully joined group with generation Generation{generationId=3, memberId='consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e', protocol='range'}
07-01-2025 21:13:38.253 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=3, memberId='consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297', protocol='range'}
07-01-2025 21:13:38.253 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Successfully joined group with generation Generation{generationId=3, memberId='consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c', protocol='range'}
07-01-2025 21:13:38.253 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=3, memberId='consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501', protocol='range'}
07-01-2025 21:13:38.261 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onLeaderElected - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Finished assignment for group at generation 3: {consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297=Assignment(partitions=[my-new-topic-1]), consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e=Assignment(partitions=[order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]), consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501=Assignment(partitions=[my-new-topic-0]), consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c=Assignment(partitions=[my-new-topic-2])}
07-01-2025 21:13:38.265 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully synced group in generation Generation{generationId=3, memberId='consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297', protocol='range'}
07-01-2025 21:13:38.265 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Successfully synced group in generation Generation{generationId=3, memberId='consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c', protocol='range'}
07-01-2025 21:13:38.265 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Successfully synced group in generation Generation{generationId=3, memberId='consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e', protocol='range'}
07-01-2025 21:13:38.265 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully synced group in generation Generation{generationId=3, memberId='consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501', protocol='range'}
07-01-2025 21:13:38.265 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-1])
07-01-2025 21:13:38.265 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-0])
07-01-2025 21:13:38.265 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-2])
07-01-2025 21:13:38.265 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2])
07-01-2025 21:13:38.266 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-0
07-01-2025 21:13:38.266 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Adding newly assigned partitions: order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2
07-01-2025 21:13:38.266 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-1
07-01-2025 21:13:38.266 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-2
07-01-2025 21:13:38.273 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition order-item-added-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:38.273 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition my-new-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:38.273 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition my-new-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:38.273 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition my-new-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:38.273 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition order-item-added-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:38.274 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition order-item-added-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:38.274 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-0]
07-01-2025 21:13:38.274 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]
07-01-2025 21:13:38.274 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-2]
07-01-2025 21:13:38.274 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-1]
07-01-2025 21:13:53.264 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: group is already rebalancing
07-01-2025 21:13:53.264 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: group is already rebalancing
07-01-2025 21:13:53.264 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: group is already rebalancing
07-01-2025 21:13:53.264 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: group is already rebalancing
07-01-2025 21:13:53.275 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Revoke previously assigned partitions order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2
07-01-2025 21:13:53.275 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-0
07-01-2025 21:13:53.275 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-1
07-01-2025 21:13:53.275 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-2
07-01-2025 21:13:53.277 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]
07-01-2025 21:13:53.277 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-2]
07-01-2025 21:13:53.277 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-1]
07-01-2025 21:13:53.277 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-0]
07-01-2025 21:13:53.278 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:53.278 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:53.278 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:53.278 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:53.284 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=4, memberId='consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297', protocol='range'}
07-01-2025 21:13:53.284 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=4, memberId='consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501', protocol='range'}
07-01-2025 21:13:53.284 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Successfully joined group with generation Generation{generationId=4, memberId='consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c', protocol='range'}
07-01-2025 21:13:53.285 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Successfully joined group with generation Generation{generationId=4, memberId='consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e', protocol='range'}
07-01-2025 21:13:53.288 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=4, memberId='consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501', protocol='range'}
07-01-2025 21:13:53.288 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=4, memberId='consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c', protocol='range'}
07-01-2025 21:13:53.288 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=4, memberId='consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297', protocol='range'}
07-01-2025 21:13:53.288 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
07-01-2025 21:13:53.288 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:53.288 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
07-01-2025 21:13:53.288 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:53.289 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
07-01-2025 21:13:53.289 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:53.465 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onLeaderElected - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Finished assignment for group at generation 4: {consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297=Assignment(partitions=[my-new-topic-2]), consumer-inventory-service-2-acddbb68-6bbf-409a-9f85-17f05a6de888=Assignment(partitions=[order-item-added-topic-0, order-item-added-topic-1]), consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e=Assignment(partitions=[order-item-added-topic-2]), consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501=Assignment(partitions=[my-new-topic-1]), consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c=Assignment(partitions=[]), consumer-inventory-service-4-7266bf22-811e-4c7c-928a-cef3315b1607=Assignment(partitions=[]), consumer-inventory-service-1-871a365a-0841-4443-a5aa-0e2ac8873550=Assignment(partitions=[my-new-topic-0]), consumer-inventory-service-3-06a1ac55-ba0b-4c6c-abb3-4e0e6dd172f0=Assignment(partitions=[])}
07-01-2025 21:13:53.467 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=4, memberId='consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e', protocol='range'}
07-01-2025 21:13:53.467 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
07-01-2025 21:13:53.468 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] (Re-)joining group
07-01-2025 21:13:53.470 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=5, memberId='consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297', protocol='range'}
07-01-2025 21:13:53.470 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=5, memberId='consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501', protocol='range'}
07-01-2025 21:13:53.470 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Successfully joined group with generation Generation{generationId=5, memberId='consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e', protocol='range'}
07-01-2025 21:13:53.470 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Successfully joined group with generation Generation{generationId=5, memberId='consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c', protocol='range'}
07-01-2025 21:13:53.471 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onLeaderElected - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Finished assignment for group at generation 5: {consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297=Assignment(partitions=[my-new-topic-1]), consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e=Assignment(partitions=[order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]), consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501=Assignment(partitions=[my-new-topic-0]), consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c=Assignment(partitions=[my-new-topic-2])}
07-01-2025 21:13:53.474 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully synced group in generation Generation{generationId=5, memberId='consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297', protocol='range'}
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully synced group in generation Generation{generationId=5, memberId='consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501', protocol='range'}
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Successfully synced group in generation Generation{generationId=5, memberId='consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e', protocol='range'}
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-1])
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-0])
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Successfully synced group in generation Generation{generationId=5, memberId='consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c', protocol='range'}
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2])
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-1
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-0
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Adding newly assigned partitions: order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-2])
07-01-2025 21:13:53.475 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-2
07-01-2025 21:13:53.477 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition my-new-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:53.477 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition my-new-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:53.477 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition my-new-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:53.477 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition order-item-added-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:53.478 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-0]
07-01-2025 21:13:53.478 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-1]
07-01-2025 21:13:53.478 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-2]
07-01-2025 21:13:53.478 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition order-item-added-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:53.478 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition order-item-added-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:13:53.478 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]
07-01-2025 21:14:07.907 [DiscoveryClient-HeartbeatExecutor-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.renew - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - Re-registering apps/INVENTORY-SERVICE
07-01-2025 21:14:07.910 [DiscoveryClient-HeartbeatExecutor-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010: registering service...
07-01-2025 21:14:07.914 [DiscoveryClient-HeartbeatExecutor-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - registration status: 204
07-01-2025 21:18:37.744 [AsyncResolver-bootstrap-executor-%d] [-] INFO  inventory-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
07-01-2025 21:22:38.428 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.apache.kafka.clients.NetworkClient.handleDisconnections - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Node -1 disconnected.
07-01-2025 21:22:38.428 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.apache.kafka.clients.NetworkClient.handleDisconnections - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Node -1 disconnected.
07-01-2025 21:22:38.428 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.apache.kafka.clients.NetworkClient.handleDisconnections - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Node -1 disconnected.
07-01-2025 21:22:38.428 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.apache.kafka.clients.NetworkClient.handleDisconnections - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Node -1 disconnected.
07-01-2025 21:23:37.749 [AsyncResolver-bootstrap-executor-%d] [-] INFO  inventory-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
07-01-2025 21:28:37.754 [AsyncResolver-bootstrap-executor-%d] [-] INFO  inventory-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
07-01-2025 21:32:38.331 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.apache.kafka.clients.NetworkClient.handleDisconnections - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Node -1 disconnected.
07-01-2025 21:32:38.331 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.apache.kafka.clients.NetworkClient.handleDisconnections - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Node -1 disconnected.
07-01-2025 21:32:38.354 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.apache.kafka.clients.NetworkClient.handleDisconnections - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Node -1 disconnected.
07-01-2025 21:32:38.354 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.apache.kafka.clients.NetworkClient.handleDisconnections - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Node -1 disconnected.
07-01-2025 21:33:37.829 [AsyncResolver-bootstrap-executor-%d] [-] INFO  inventory-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
07-01-2025 21:38:37.844 [AsyncResolver-bootstrap-executor-%d] [-] INFO  inventory-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
07-01-2025 21:39:06.810 [SpringApplicationShutdownHook] [-] INFO  inventory-service-o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
07-01-2025 21:39:06.815 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1736266146814, current=DOWN, previous=UP]
07-01-2025 21:39:06.819 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010: registering service...
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-1
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Revoke previously assigned partitions order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-2
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-1]
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-2]
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Member consumer-inventory-service-2-b2b793ab-5e4d-4036-9f33-9789389d5297 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-0
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Member consumer-inventory-service-3-122a793d-d36b-479d-bbd3-f9ebd829839e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 21:39:06.880 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Member consumer-inventory-service-4-52138a20-5308-41b8-9a63-e1d0e203731c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-0]
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Member consumer-inventory-service-1-a623bbd2-f90a-482f-aeeb-36d6e5a1d501 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.881 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 21:39:06.882 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 21:39:06.883 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.883 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 21:39:06.885 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.885 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.885 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.885 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.886 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.886 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.885 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.886 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:39:06.893 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9000/eureka/} exception=I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": Connection reset stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": Connection reset
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:318)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
	at java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1108)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1095)
	at org.apache.hc.core5.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:149)
	at org.apache.hc.core5.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:247)
	at org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:54)
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:304)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:717)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

07-01-2025 21:39:06.893 [DiscoveryClient-InstanceInfoReplicator-%d] [-] WARN  inventory-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": Connection reset
07-01-2025 21:39:06.906 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9000/eureka/}, exception=I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

07-01-2025 21:39:06.906 [DiscoveryClient-InstanceInfoReplicator-%d] [-] WARN  inventory-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on POST request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
07-01-2025 21:39:06.906 [DiscoveryClient-InstanceInfoReplicator-%d] [-] WARN  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
07-01-2025 21:39:06.910 [DiscoveryClient-InstanceInfoReplicator-%d] [-] WARN  inventory-service-c.n.discovery.InstanceInfoReplicator.run - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 21:39:07.175 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 21:39:07.176 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 21:39:07.176 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 21:39:07.187 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-4 unregistered
07-01-2025 21:39:07.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-1 unregistered
07-01-2025 21:39:07.188 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-2 unregistered
07-01-2025 21:39:07.189 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-3 unregistered
07-01-2025 21:39:07.201 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 21:39:07.203 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 21:39:07.204 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 21:39:07.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 21:39:07.213 [SpringApplicationShutdownHook] [-] INFO  inventory-service-o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
07-01-2025 21:39:07.215 [SpringApplicationShutdownHook] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
07-01-2025 21:39:07.216 [SpringApplicationShutdownHook] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
07-01-2025 21:39:07.743 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
07-01-2025 21:39:13.633 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://localhost:9040
07-01-2025 21:39:13.634 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Exception on Url - http://localhost:9040:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:9040/inventory-service/default": Connection refused. Will be trying the next url if available
07-01-2025 21:39:13.652 [main] [-] ERROR inventory-service-o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.cloud.config.client.ConfigClientFailFastException: Could not locate PropertySource and the resource is not optional, failing
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.doLoad(ConfigServerConfigDataLoader.java:210)
	at org.springframework.cloud.config.client.ConfigClientRetryBootstrapper.lambda$initialize$1(ConfigClientRetryBootstrapper.java:54)
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.load(ConfigServerConfigDataLoader.java:95)
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.load(ConfigServerConfigDataLoader.java:62)
	at org.springframework.boot.context.config.ConfigDataLoaders.load(ConfigDataLoaders.java:96)
	at org.springframework.boot.context.config.ConfigDataImporter.load(ConfigDataImporter.java:132)
	at org.springframework.boot.context.config.ConfigDataImporter.resolveAndLoad(ConfigDataImporter.java:87)
	at org.springframework.boot.context.config.ConfigDataEnvironmentContributors.withProcessedImports(ConfigDataEnvironmentContributors.java:121)
	at org.springframework.boot.context.config.ConfigDataEnvironment.processInitial(ConfigDataEnvironment.java:245)
	at org.springframework.boot.context.config.ConfigDataEnvironment.processAndApply(ConfigDataEnvironment.java:232)
	at org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor.postProcessEnvironment(ConfigDataEnvironmentPostProcessor.java:96)
	at org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor.postProcessEnvironment(ConfigDataEnvironmentPostProcessor.java:89)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEnvironmentPreparedEvent(EnvironmentPostProcessorApplicationListener.java:109)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEvent(EnvironmentPostProcessorApplicationListener.java:94)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.parimal.ecommerce.inventory_service.InventoryServiceApplication.main(InventoryServiceApplication.java:12)
Caused by: org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:9040/inventory-service/default": Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.getRemoteEnvironment(ConfigServerConfigDataLoader.java:339)
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.doLoad(ConfigServerConfigDataLoader.java:122)
	... 29 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:178)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:531)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:636)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:280)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:386)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:408)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1310)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1243)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1129)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1058)
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 33 common frames omitted
07-01-2025 21:39:26.864 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://localhost:9040
07-01-2025 21:39:26.875 [main] [-] ERROR inventory-service-o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.cloud.config.client.ConfigClientFailFastException: Could not locate PropertySource and the resource is not optional, failing: None of labels [] found
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.doLoad(ConfigServerConfigDataLoader.java:210)
	at org.springframework.cloud.config.client.ConfigClientRetryBootstrapper.lambda$initialize$1(ConfigClientRetryBootstrapper.java:54)
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.load(ConfigServerConfigDataLoader.java:95)
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.load(ConfigServerConfigDataLoader.java:62)
	at org.springframework.boot.context.config.ConfigDataLoaders.load(ConfigDataLoaders.java:96)
	at org.springframework.boot.context.config.ConfigDataImporter.load(ConfigDataImporter.java:132)
	at org.springframework.boot.context.config.ConfigDataImporter.resolveAndLoad(ConfigDataImporter.java:87)
	at org.springframework.boot.context.config.ConfigDataEnvironmentContributors.withProcessedImports(ConfigDataEnvironmentContributors.java:121)
	at org.springframework.boot.context.config.ConfigDataEnvironment.processInitial(ConfigDataEnvironment.java:245)
	at org.springframework.boot.context.config.ConfigDataEnvironment.processAndApply(ConfigDataEnvironment.java:232)
	at org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor.postProcessEnvironment(ConfigDataEnvironmentPostProcessor.java:96)
	at org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor.postProcessEnvironment(ConfigDataEnvironmentPostProcessor.java:89)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEnvironmentPreparedEvent(EnvironmentPostProcessorApplicationListener.java:109)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEvent(EnvironmentPostProcessorApplicationListener.java:94)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.parimal.ecommerce.inventory_service.InventoryServiceApplication.main(InventoryServiceApplication.java:12)
07-01-2025 21:40:23.671 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://localhost:9040
07-01-2025 21:40:23.681 [main] [-] ERROR inventory-service-o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.cloud.config.client.ConfigClientFailFastException: Could not locate PropertySource and the resource is not optional, failing: None of labels [] found
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.doLoad(ConfigServerConfigDataLoader.java:210)
	at org.springframework.cloud.config.client.ConfigClientRetryBootstrapper.lambda$initialize$1(ConfigClientRetryBootstrapper.java:54)
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.load(ConfigServerConfigDataLoader.java:95)
	at org.springframework.cloud.config.client.ConfigServerConfigDataLoader.load(ConfigServerConfigDataLoader.java:62)
	at org.springframework.boot.context.config.ConfigDataLoaders.load(ConfigDataLoaders.java:96)
	at org.springframework.boot.context.config.ConfigDataImporter.load(ConfigDataImporter.java:132)
	at org.springframework.boot.context.config.ConfigDataImporter.resolveAndLoad(ConfigDataImporter.java:87)
	at org.springframework.boot.context.config.ConfigDataEnvironmentContributors.withProcessedImports(ConfigDataEnvironmentContributors.java:121)
	at org.springframework.boot.context.config.ConfigDataEnvironment.processInitial(ConfigDataEnvironment.java:245)
	at org.springframework.boot.context.config.ConfigDataEnvironment.processAndApply(ConfigDataEnvironment.java:232)
	at org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor.postProcessEnvironment(ConfigDataEnvironmentPostProcessor.java:96)
	at org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor.postProcessEnvironment(ConfigDataEnvironmentPostProcessor.java:89)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEnvironmentPreparedEvent(EnvironmentPostProcessorApplicationListener.java:109)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEvent(EnvironmentPostProcessorApplicationListener.java:94)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.parimal.ecommerce.inventory_service.InventoryServiceApplication.main(InventoryServiceApplication.java:12)
07-01-2025 21:43:41.875 [main] [-] INFO  inventory-service-c.p.e.i.InventoryServiceApplication.logStarting - Starting InventoryServiceApplication using Java 22.0.2 with PID 5171 (/Users/parimal/Java_Projects/Spring_Boot_Microservices/inventory-service/target/classes started by parimal in /Users/parimal/Java_Projects/Spring_Boot_Microservices)
07-01-2025 21:43:41.876 [main] [-] INFO  inventory-service-c.p.e.i.InventoryServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
07-01-2025 21:43:41.891 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://localhost:9040
07-01-2025 21:43:41.891 [main] [-] INFO  inventory-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=inventory-service, profiles=[default], label=null, version=7707b8f2221f437a7957856bc3c72f608d8d659b, state=
07-01-2025 21:43:42.244 [main] [-] INFO  inventory-service-o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
07-01-2025 21:43:42.295 [main] [-] INFO  inventory-service-o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 48 ms. Found 1 JPA repository interface.
07-01-2025 21:43:42.396 [main] [-] INFO  inventory-service-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=ee674a73-f150-3676-b118-6815a60d9d35
07-01-2025 21:43:42.532 [main] [-] WARN  inventory-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
07-01-2025 21:43:42.534 [main] [-] WARN  inventory-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
07-01-2025 21:43:42.646 [main] [-] INFO  inventory-service-o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port 9010 (http)
07-01-2025 21:43:42.651 [main] [-] INFO  inventory-service-o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-9010"]
07-01-2025 21:43:42.652 [main] [-] INFO  inventory-service-o.a.catalina.core.StandardService.log - Starting service [Tomcat]
07-01-2025 21:43:42.652 [main] [-] INFO  inventory-service-o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.31]
07-01-2025 21:43:42.678 [main] [-] INFO  inventory-service-o.a.c.c.C.[.[localhost].[/products].log - Initializing Spring embedded WebApplicationContext
07-01-2025 21:43:42.678 [main] [-] INFO  inventory-service-o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 785 ms
07-01-2025 21:43:42.920 [main] [-] INFO  inventory-service-o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
07-01-2025 21:43:42.941 [main] [-] INFO  inventory-service-org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.5.3.Final
07-01-2025 21:43:42.951 [main] [-] INFO  inventory-service-o.h.c.i.RegionFactoryInitiator.initiateService - HHH000026: Second-level cache disabled
07-01-2025 21:43:43.042 [main] [-] INFO  inventory-service-o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
07-01-2025 21:43:43.052 [main] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
07-01-2025 21:43:43.086 [main] [-] INFO  inventory-service-com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5776a9f8
07-01-2025 21:43:43.087 [main] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
07-01-2025 21:43:43.410 [main] [-] INFO  inventory-service-o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
07-01-2025 21:43:43.439 [main] [-] INFO  inventory-service-o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
07-01-2025 21:43:43.616 [main] [-] WARN  inventory-service-o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
07-01-2025 21:43:43.658 [main] [-] INFO  inventory-service-o.s.c.o.FeignClientFactoryBean.getTarget - For 'order-service' URL not provided. Will try picking an instance via load-balancing.
07-01-2025 21:43:44.017 [main] [-] INFO  inventory-service-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
07-01-2025 21:43:44.030 [main] [-] WARN  inventory-service-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
07-01-2025 21:43:44.037 [main] [-] INFO  inventory-service-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 17 endpoints beneath base path '/actuator'
07-01-2025 21:43:44.080 [main] [-] INFO  inventory-service-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
07-01-2025 21:43:44.089 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
07-01-2025 21:43:44.091 [main] [-] INFO  inventory-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
07-01-2025 21:43:44.093 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
07-01-2025 21:43:44.093 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
07-01-2025 21:43:44.093 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
07-01-2025 21:43:44.094 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
07-01-2025 21:43:44.094 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
07-01-2025 21:43:44.094 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
07-01-2025 21:43:44.094 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
07-01-2025 21:43:44.153 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
07-01-2025 21:43:44.154 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
07-01-2025 21:43:44.158 [main] [-] INFO  inventory-service-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
07-01-2025 21:43:44.159 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1736266424159 with initial instances count: 2
07-01-2025 21:43:44.163 [main] [-] INFO  inventory-service-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application INVENTORY-SERVICE with eureka with status UP
07-01-2025 21:43:44.164 [main] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1736266424164, current=UP, previous=STARTING]
07-01-2025 21:43:44.164 [main] [-] INFO  inventory-service-o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-9010"]
07-01-2025 21:43:44.165 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010: registering service...
07-01-2025 21:43:44.177 [main] [-] INFO  inventory-service-o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port 9010 (http) with context path '/products'
07-01-2025 21:43:44.178 [main] [-] INFO  inventory-service-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 9010
07-01-2025 21:43:44.188 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - registration status: 204
07-01-2025 21:43:44.197 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

07-01-2025 21:43:44.215 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 21:43:44.262 [main] [-] INFO  inventory-service-i.c.k.s.KafkaAvroDeserializerConfig.logAll - KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

07-01-2025 21:43:44.302 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logUnused - These configurations '[schema.registry.url, spring.json.trusted.packages, specific.avro.reader]' were supplied but are not used yet.
07-01-2025 21:43:44.303 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 21:43:44.303 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 21:43:44.303 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736266424303
07-01-2025 21:43:44.309 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Subscribed to topic(s): my-new-topic
07-01-2025 21:43:44.312 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

07-01-2025 21:43:44.313 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 21:43:44.313 [main] [-] INFO  inventory-service-i.c.k.s.KafkaAvroDeserializerConfig.logAll - KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

07-01-2025 21:43:44.316 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logUnused - These configurations '[schema.registry.url, spring.json.trusted.packages, specific.avro.reader]' were supplied but are not used yet.
07-01-2025 21:43:44.316 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 21:43:44.316 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 21:43:44.316 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736266424316
07-01-2025 21:43:44.319 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Subscribed to topic(s): order-item-added-topic
07-01-2025 21:43:44.320 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

07-01-2025 21:43:44.321 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 21:43:44.321 [main] [-] INFO  inventory-service-i.c.k.s.KafkaAvroDeserializerConfig.logAll - KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

07-01-2025 21:43:44.324 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logUnused - These configurations '[schema.registry.url, spring.json.trusted.packages, specific.avro.reader]' were supplied but are not used yet.
07-01-2025 21:43:44.324 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 21:43:44.324 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 21:43:44.324 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736266424324
07-01-2025 21:43:44.327 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Subscribed to topic(s): my-new-topic
07-01-2025 21:43:44.327 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logAll - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

07-01-2025 21:43:44.328 [main] [-] INFO  inventory-service-o.a.k.c.t.i.KafkaMetricsCollector.init - initializing Kafka metrics collector
07-01-2025 21:43:44.328 [main] [-] INFO  inventory-service-i.c.k.s.KafkaAvroDeserializerConfig.logAll - KafkaAvroDeserializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	rule.actions = []
	rule.executors = []
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.avro.key.type = null
	specific.avro.reader = true
	specific.avro.value.type = null
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

07-01-2025 21:43:44.330 [main] [-] INFO  inventory-service-o.a.k.c.consumer.ConsumerConfig.logUnused - These configurations '[schema.registry.url, spring.json.trusted.packages, specific.avro.reader]' were supplied but are not used yet.
07-01-2025 21:43:44.331 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka version: 3.7.1
07-01-2025 21:43:44.331 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka commitId: e2494e6ffb89f828
07-01-2025 21:43:44.331 [main] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.<init> - Kafka startTimeMs: 1736266424330
07-01-2025 21:43:44.333 [main] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.subscribeInternal - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Subscribed to topic(s): my-new-topic
07-01-2025 21:43:44.351 [main] [-] INFO  inventory-service-c.p.e.i.InventoryServiceApplication.logStarted - Started InventoryServiceApplication in 5.909 seconds (process running for 6.095)
07-01-2025 21:43:44.439 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 21:43:44.439 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 21:43:44.439 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 21:43:44.439 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-org.apache.kafka.clients.Metadata.update - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
07-01-2025 21:43:44.439 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 21:43:44.439 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 21:43:44.439 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 21:43:44.439 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onSuccess - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
07-01-2025 21:43:44.440 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
07-01-2025 21:43:44.440 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] (Re-)joining group
07-01-2025 21:43:44.440 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] (Re-)joining group
07-01-2025 21:43:44.440 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
07-01-2025 21:43:44.449 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-4-110afc2b-d0a2-4028-96d0-69f1f3d25bae
07-01-2025 21:43:44.449 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-3-80a5f3e1-7140-4a8b-ab28-b8a51518b3ee
07-01-2025 21:43:44.449 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-1-fea104dd-0b1c-402d-ad56-be3978ee9fb3
07-01-2025 21:43:44.449 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] (Re-)joining group
07-01-2025 21:43:44.449 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] (Re-)joining group
07-01-2025 21:43:44.449 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
07-01-2025 21:43:44.449 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-2-9b8ce603-b1df-47a9-bceb-2f9d884f3be8
07-01-2025 21:43:44.450 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.sendJoinGroupRequest - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
07-01-2025 21:43:44.453 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-inventory-service-2-9b8ce603-b1df-47a9-bceb-2f9d884f3be8', protocol='range'}
07-01-2025 21:43:44.453 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-inventory-service-3-80a5f3e1-7140-4a8b-ab28-b8a51518b3ee', protocol='range'}
07-01-2025 21:43:44.453 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-inventory-service-1-fea104dd-0b1c-402d-ad56-be3978ee9fb3', protocol='range'}
07-01-2025 21:43:44.453 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-inventory-service-4-110afc2b-d0a2-4028-96d0-69f1f3d25bae', protocol='range'}
07-01-2025 21:43:44.460 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.onLeaderElected - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Finished assignment for group at generation 7: {consumer-inventory-service-4-110afc2b-d0a2-4028-96d0-69f1f3d25bae=Assignment(partitions=[my-new-topic-2]), consumer-inventory-service-2-9b8ce603-b1df-47a9-bceb-2f9d884f3be8=Assignment(partitions=[order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]), consumer-inventory-service-3-80a5f3e1-7140-4a8b-ab28-b8a51518b3ee=Assignment(partitions=[my-new-topic-1]), consumer-inventory-service-1-fea104dd-0b1c-402d-ad56-be3978ee9fb3=Assignment(partitions=[my-new-topic-0])}
07-01-2025 21:43:44.463 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-inventory-service-4-110afc2b-d0a2-4028-96d0-69f1f3d25bae', protocol='range'}
07-01-2025 21:43:44.463 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-inventory-service-1-fea104dd-0b1c-402d-ad56-be3978ee9fb3', protocol='range'}
07-01-2025 21:43:44.463 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-inventory-service-2-9b8ce603-b1df-47a9-bceb-2f9d884f3be8', protocol='range'}
07-01-2025 21:43:44.463 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.handle - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-inventory-service-3-80a5f3e1-7140-4a8b-ab28-b8a51518b3ee', protocol='range'}
07-01-2025 21:43:44.463 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-2])
07-01-2025 21:43:44.464 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2])
07-01-2025 21:43:44.463 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-0])
07-01-2025 21:43:44.464 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.invokeOnAssignment - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[my-new-topic-1])
07-01-2025 21:43:44.464 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-1
07-01-2025 21:43:44.464 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-2
07-01-2025 21:43:44.464 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Adding newly assigned partitions: my-new-topic-0
07-01-2025 21:43:44.464 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsAssigned - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Adding newly assigned partitions: order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition my-new-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition order-item-added-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition my-new-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition my-new-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition order-item-added-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.internals.ConsumerUtils.refreshCommittedOffsets - Setting offset for partition order-item-added-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-1]
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-0]
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [my-new-topic-2]
07-01-2025 21:43:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions assigned: [order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]
07-01-2025 21:44:27.969 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-c.p.e.i.c.OrdersKafkaConsumer.handleOrderItemAddedTopic - Inside the order item added topic consumer with data: {"id": 6, "productId": 1, "quantity": 10}
07-01-2025 21:48:44.015 [AsyncResolver-bootstrap-executor-%d] [-] INFO  inventory-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
07-01-2025 21:49:01.117 [SpringApplicationShutdownHook] [-] INFO  inventory-service-o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
07-01-2025 21:49:01.117 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1736266741117, current=DOWN, previous=UP]
07-01-2025 21:49:01.119 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010: registering service...
07-01-2025 21:49:01.125 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Revoke previously assigned partitions order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2
07-01-2025 21:49:01.126 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [order-item-added-topic-0, order-item-added-topic-1, order-item-added-topic-2]
07-01-2025 21:49:01.128 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Member consumer-inventory-service-2-9b8ce603-b1df-47a9-bceb-2f9d884f3be8 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 21:49:01.129 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.130 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.130 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 21:49:01.132 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-0
07-01-2025 21:49:01.132 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-0]
07-01-2025 21:49:01.132 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Member consumer-inventory-service-1-fea104dd-0b1c-402d-ad56-be3978ee9fb3 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 21:49:01.133 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.133 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.133 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 21:49:01.134 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-2
07-01-2025 21:49:01.134 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-2]
07-01-2025 21:49:01.134 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Member consumer-inventory-service-4-110afc2b-d0a2-4028-96d0-69f1f3d25bae sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 21:49:01.135 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.135 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.135 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 21:49:01.134 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerRebalanceListenerInvoker.invokePartitionsRevoked - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Revoke previously assigned partitions my-new-topic-1
07-01-2025 21:49:01.136 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: partitions revoked: [my-new-topic-1]
07-01-2025 21:49:01.137 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.maybeLeaveGroup - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Member consumer-inventory-service-3-80a5f3e1-7140-4a8b-ab28-b8a51518b3ee sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
07-01-2025 21:49:01.137 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.137 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.138 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.LegacyKafkaConsumer.unsubscribe - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
07-01-2025 21:49:01.136 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.139 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.140 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.140 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-4, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.137 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.140 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.144 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - registration status: 204
07-01-2025 21:49:01.145 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.resetStateAndGeneration - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.145 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.k.c.c.i.ConsumerCoordinator.requestRejoin - [Consumer clientId=consumer-inventory-service-3, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
07-01-2025 21:49:01.365 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 21:49:01.365 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 21:49:01.365 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 21:49:01.365 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 21:49:01.365 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 21:49:01.366 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 21:49:01.366 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 21:49:01.366 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 21:49:01.366 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 21:49:01.366 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 21:49:01.366 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 21:49:01.366 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 21:49:01.374 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-1 unregistered
07-01-2025 21:49:01.374 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-4 unregistered
07-01-2025 21:49:01.375 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-3 unregistered
07-01-2025 21:49:01.377 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 21:49:01.378 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 21:49:01.380 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 21:49:01.553 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics scheduler closed
07-01-2025 21:49:01.553 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.metrics.JmxReporter
07-01-2025 21:49:01.553 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
07-01-2025 21:49:01.553 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.metrics.Metrics.close - Metrics reporters closed
07-01-2025 21:49:01.556 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.a.kafka.common.utils.AppInfoParser.unregisterAppInfo - App info kafka.consumer for consumer-inventory-service-2 unregistered
07-01-2025 21:49:01.558 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] [-] INFO  inventory-service-o.s.k.l.KafkaMessageListenerContainer.info - inventory-service: Consumer stopped
07-01-2025 21:49:01.571 [SpringApplicationShutdownHook] [-] INFO  inventory-service-o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
07-01-2025 21:49:01.573 [SpringApplicationShutdownHook] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
07-01-2025 21:49:01.575 [SpringApplicationShutdownHook] [-] INFO  inventory-service-com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
07-01-2025 21:49:02.283 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
07-01-2025 21:49:05.289 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.unregister - Unregistering ...
07-01-2025 21:49:05.294 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9000/eureka/} exception=I/O error on DELETE request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE/192.168.246.29:inventory-service:9010": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE/192.168.246.29:inventory-service:9010": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

07-01-2025 21:49:05.295 [SpringApplicationShutdownHook] [-] WARN  inventory-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on DELETE request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE/192.168.246.29:inventory-service:9010": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
07-01-2025 21:49:05.299 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9000/eureka/}, exception=I/O error on DELETE request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE/192.168.246.29:inventory-service:9010": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE/192.168.246.29:inventory-service:9010": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:752)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

07-01-2025 21:49:05.299 [SpringApplicationShutdownHook] [-] WARN  inventory-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on DELETE request for "http://localhost:9000/eureka/apps/INVENTORY-SERVICE/192.168.246.29:inventory-service:9010": Connect to http://localhost:9000 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
07-01-2025 21:49:05.300 [SpringApplicationShutdownHook] [-] ERROR inventory-service-c.netflix.discovery.DiscoveryClient.unregister - DiscoveryClient_INVENTORY-SERVICE/192.168.246.29:inventory-service:9010 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1570)
07-01-2025 21:49:05.301 [SpringApplicationShutdownHook] [-] INFO  inventory-service-c.netflix.discovery.DiscoveryClient.shutdown - Completed shut down of DiscoveryClient

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://${DB_HOST_URL}/${DB_NAME}?useSSL=false
    username:
    password:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true

management:
  health:
    circuitBreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

#  sql:
#    init:
#      mode: always
#      data-locations: classpath:data.sql

server:
  servlet:
#    Before using the API Gateway.
#    context-path: /api/v1
#    After using the API Gateway.
    context-path: /orders
  port: 9020

# Eureka client configs.
eureka:
  client:
    service-url:
      #      registering the inventory service to the eureka server using the below address of eureka server.
      defaultZone: http://localhost:9000/eureka

# Custom Resilience4J configs.
resilience4j:
  retry:
    instances:
      inventoryRetry:
        maxRetryAttempts: 3
#        1s -> 1 second. waitDuration: The duration to wait between each retry.
        waitDuration: 10s
  ratelimiter:
    instances:
      inventoryRateLimiter:
        limitRefreshPeriod: 5s
        limitForPeriod: 1
        timeoutDuration: 1s
  circuitbreaker:
    instances:
      inventoryCircuitBreaker:
        register-health-check: true
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 5
        sliding-window-type: COUNT_BASED
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true

# Default Resilience4J configs.
#resilience4j:
#  retry:
#    configs:
#      default:
#        maxRetryAttempts: 3
##        5s -> 5 seconds.
#        waitDuration: 5s
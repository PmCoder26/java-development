spring.application.name = SpringBootFirstProject
deploy.env = development
#spring.h2.console.enabled = true


# if you want to define the path where the data of database to be stored instead in temporary memory.
#spring.datasource.url = jdbc:h2:file:/Users/parimal/SpringDB/parimalDB
#spring.datasource.username = parimalDB
#spring.datasource.password = Parimal123

# since, the database is not created everytime, i.e. is uses previous database, and initially,
# we don't have any data, so to change the behaviour of it, we do below modification.
#spring.jpa.hibernate.ddl-auto = update         // used for virtual database

# properties for configuring the MySql database with spring boot project.
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.show-sql = true
#spring.jpa.properties.hibernate.format_sql = true

#   now format: jdbc:mysql://localhost:port_name(here, 3306)/database_name?useSSL=false
#spring.datasource.url = jdbc:mysql://localhost:3306/shop?useSSL=false
#spring.datasource.username = root
#spring.datasource.password = password

# database configuration for the cloud database.
#spring.datasource.url = jdbc:mysql://mysql-1.chci866o2f2m.eu-north-1.rds.amazonaws.com:3306/shop2
#spring.datasource.username = root
#spring.datasource.password = password

# database configuration for the cloud database with some advanced techniques while deploying the project.
spring.datasource.url = jdbc:mysql://${DB_HOST_URL}:3306/${DB_NAME}
spring.datasource.username = ${DB_USERNAME}
spring.datasource.password = ${DB_PASSWORD}

#   devtools configurations.
spring.devtools.restart.enabled = true

# logger configurations.
    # setting the TRACE log for the below destination only.
#logging.level.com.parimal.firstProject.SpringBootFirstProject.SpringBoot_MVC_And_RestAPIs.clients = TRACE
#    # setting the DEBUG log for whole project.
# logging.level.root = DEBUG
#    # modifying the logging pattern of displaying the messages of logs.
#logging.pattern.console = %d{dd-mm-yyyy dd:MM:ss} %c{1.} [%level] --- %m%n
## meaning of the above line:    date{format} [classpath{last_two_path_names.}] [level of the log, i.e., error, debug, trace or info] [message] [new line]
## creates a file of name 'application.log' and stores the logs in it.
#logging.file.name = application.log
## now setting for creating the log folder to keep track of logs.
#logging.config = classpath:logback-spring.xml

# spring boot actuator configs.
    # * -> all
management.endpoints.web.exposure.include = *
management.info.env.enabled = true
# the below line code enables to write the content which is written in the 'application.properties' file as below.
info.app.author = Parimal Sagar Matte
info.app.version = 2.5.1
# some other configurations to see more details.
management.endpoint.env.show-values = always
management.info.build.enabled = true
management.info.git.enabled = true
management.info.java.enabled = true
management.info.os.enabled = true

# configuring the spring security more.
#spring.security.user.name = parimal
#spring.security.user.password = password

# JWT required contents.
jwt.secretKey = mvnmvnjjsfghjsgtu%nce7t458c38n57rtuiertijfklnksdnkvfjkdugyer8834758470#%$^&))(*57348rhfjkesnjhfuihfurhfjfnjsd

# Google OAuth2 configs.
    # the configurations are done in the 'applications.yml' file for better convenience.
